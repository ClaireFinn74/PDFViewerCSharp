//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



namespace PDFUsingSyncFusion
{
    public partial class App : global::Windows.UI.Xaml.Markup.IXamlMetadataProvider
    {
    private global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlTypeInfoProvider _provider;

        /// <summary>
        /// GetXamlType(Type)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            if(_provider == null)
            {
                _provider = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlTypeInfoProvider();
            }
            return _provider.GetXamlTypeByType(type);
        }

        /// <summary>
        /// GetXamlType(String)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            if(_provider == null)
            {
                _provider = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlTypeInfoProvider();
            }
            return _provider.GetXamlTypeByName(fullName);
        }

        /// <summary>
        /// GetXmlnsDefinitions()
        /// </summary>
        public global::Windows.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return new global::Windows.UI.Xaml.Markup.XmlnsDefinition[0];
        }
    }
}

namespace PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo
{
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlTypeInfoProvider
    {
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByType(global::System.Type type)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByType.TryGetValue(type, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByType(type);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            var userXamlType = xamlType as global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlUserType;
            if(xamlType == null || (userXamlType != null && userXamlType.IsReturnTypeStub && !userXamlType.IsLocalType))
            {
                global::Windows.UI.Xaml.Markup.IXamlType libXamlType = CheckOtherMetadataProvidersForType(type);
                if (libXamlType != null)
                {
                    if(libXamlType.IsConstructible || xamlType == null)
                    {
                        xamlType = libXamlType;
                    }
                }
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByName(string typeName)
        {
            if (string.IsNullOrEmpty(typeName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByName.TryGetValue(typeName, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByName(typeName);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            var userXamlType = xamlType as global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlUserType;
            if(xamlType == null || (userXamlType != null && userXamlType.IsReturnTypeStub && !userXamlType.IsLocalType))
            {
                global::Windows.UI.Xaml.Markup.IXamlType libXamlType = CheckOtherMetadataProvidersForName(typeName);
                if (libXamlType != null)
                {
                    if(libXamlType.IsConstructible || xamlType == null)
                    {
                        xamlType = libXamlType;
                    }
                }
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlMember GetMemberByLongName(string longMemberName)
        {
            if (string.IsNullOrEmpty(longMemberName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlMember xamlMember;
            if (_xamlMembers.TryGetValue(longMemberName, out xamlMember))
            {
                return xamlMember;
            }
            xamlMember = CreateXamlMember(longMemberName);
            if (xamlMember != null)
            {
                _xamlMembers.Add(longMemberName, xamlMember);
            }
            return xamlMember;
        }

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByName = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByType = new global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>
                _xamlMembers = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>();

        string[] _typeNameTable = null;
        global::System.Type[] _typeTable = null;

        private void InitTypeTables()
        {
            _typeNameTable = new string[33];
            _typeNameTable[0] = "Syncfusion.Windows.PdfViewer.SfPdfViewerControl";
            _typeNameTable[1] = "Windows.UI.Xaml.Controls.Control";
            _typeNameTable[2] = "Boolean";
            _typeNameTable[3] = "Syncfusion.Windows.PdfViewer.PrinterSettings";
            _typeNameTable[4] = "Object";
            _typeNameTable[5] = "Syncfusion.Windows.PdfViewer.TextSearchSettings";
            _typeNameTable[6] = "Syncfusion.Windows.PdfViewer.TextSelectionSettings";
            _typeNameTable[7] = "Single";
            _typeNameTable[8] = "System.Collections.Generic.Dictionary`2<Int32, Double>";
            _typeNameTable[9] = "Double";
            _typeNameTable[10] = "Int32";
            _typeNameTable[11] = "Windows.UI.Xaml.Controls.ProgressRing";
            _typeNameTable[12] = "Syncfusion.Windows.PdfViewer.PdfViewerPageView";
            _typeNameTable[13] = "System.Enum";
            _typeNameTable[14] = "System.ValueType";
            _typeNameTable[15] = "Syncfusion.Windows.PdfViewer.PageViewMode";
            _typeNameTable[16] = "Syncfusion.Windows.PdfViewer.PageNumberViewMode";
            _typeNameTable[17] = "Windows.UI.Xaml.Visibility";
            _typeNameTable[18] = "Windows.UI.Xaml.Controls.ScrollBarVisibility";
            _typeNameTable[19] = "System.Windows.Input.ICommand";
            _typeNameTable[20] = "Syncfusion.Windows.PdfViewer.UndoCommand";
            _typeNameTable[21] = "Syncfusion.Windows.PdfViewer.PdfViewerInkAnnotationSettings";
            _typeNameTable[22] = "Syncfusion.Windows.PdfViewer.PdfViewerAnnotationSettings";
            _typeNameTable[23] = "Syncfusion.Windows.PdfViewer.PdfViewerHighlightAnnotationSettings";
            _typeNameTable[24] = "Syncfusion.Windows.PdfViewer.PdfViewerUnderlineAnnotationSettings";
            _typeNameTable[25] = "Syncfusion.Windows.PdfViewer.PdfViewerStrikethroughAnnotationSettings";
            _typeNameTable[26] = "Syncfusion.Windows.PdfViewer.PdfViewerLineAnnotationSettings";
            _typeNameTable[27] = "Syncfusion.Windows.PdfViewer.PdfViewerRectangleAnnotationSettings";
            _typeNameTable[28] = "Syncfusion.Windows.PdfViewer.PdfViewerEllipseAnnotationSettings";
            _typeNameTable[29] = "Syncfusion.Windows.PdfViewer.RedoCommand";
            _typeNameTable[30] = "PDFUsingSyncFusion.MainPage";
            _typeNameTable[31] = "Windows.UI.Xaml.Controls.Page";
            _typeNameTable[32] = "Windows.UI.Xaml.Controls.UserControl";

            _typeTable = new global::System.Type[33];
            _typeTable[0] = typeof(global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl);
            _typeTable[1] = typeof(global::Windows.UI.Xaml.Controls.Control);
            _typeTable[2] = typeof(global::System.Boolean);
            _typeTable[3] = typeof(global::Syncfusion.Windows.PdfViewer.PrinterSettings);
            _typeTable[4] = typeof(global::System.Object);
            _typeTable[5] = typeof(global::Syncfusion.Windows.PdfViewer.TextSearchSettings);
            _typeTable[6] = typeof(global::Syncfusion.Windows.PdfViewer.TextSelectionSettings);
            _typeTable[7] = typeof(global::System.Single);
            _typeTable[8] = typeof(global::System.Collections.Generic.Dictionary<global::System.Int32, global::System.Double>);
            _typeTable[9] = typeof(global::System.Double);
            _typeTable[10] = typeof(global::System.Int32);
            _typeTable[11] = typeof(global::Windows.UI.Xaml.Controls.ProgressRing);
            _typeTable[12] = typeof(global::Syncfusion.Windows.PdfViewer.PdfViewerPageView);
            _typeTable[13] = typeof(global::System.Enum);
            _typeTable[14] = typeof(global::System.ValueType);
            _typeTable[15] = typeof(global::Syncfusion.Windows.PdfViewer.PageViewMode);
            _typeTable[16] = typeof(global::Syncfusion.Windows.PdfViewer.PageNumberViewMode);
            _typeTable[17] = typeof(global::Windows.UI.Xaml.Visibility);
            _typeTable[18] = typeof(global::Windows.UI.Xaml.Controls.ScrollBarVisibility);
            _typeTable[19] = typeof(global::System.Windows.Input.ICommand);
            _typeTable[20] = typeof(global::Syncfusion.Windows.PdfViewer.UndoCommand);
            _typeTable[21] = typeof(global::Syncfusion.Windows.PdfViewer.PdfViewerInkAnnotationSettings);
            _typeTable[22] = typeof(global::Syncfusion.Windows.PdfViewer.PdfViewerAnnotationSettings);
            _typeTable[23] = typeof(global::Syncfusion.Windows.PdfViewer.PdfViewerHighlightAnnotationSettings);
            _typeTable[24] = typeof(global::Syncfusion.Windows.PdfViewer.PdfViewerUnderlineAnnotationSettings);
            _typeTable[25] = typeof(global::Syncfusion.Windows.PdfViewer.PdfViewerStrikethroughAnnotationSettings);
            _typeTable[26] = typeof(global::Syncfusion.Windows.PdfViewer.PdfViewerLineAnnotationSettings);
            _typeTable[27] = typeof(global::Syncfusion.Windows.PdfViewer.PdfViewerRectangleAnnotationSettings);
            _typeTable[28] = typeof(global::Syncfusion.Windows.PdfViewer.PdfViewerEllipseAnnotationSettings);
            _typeTable[29] = typeof(global::Syncfusion.Windows.PdfViewer.RedoCommand);
            _typeTable[30] = typeof(global::PDFUsingSyncFusion.MainPage);
            _typeTable[31] = typeof(global::Windows.UI.Xaml.Controls.Page);
            _typeTable[32] = typeof(global::Windows.UI.Xaml.Controls.UserControl);
        }

        private int LookupTypeIndexByName(string typeName)
        {
            if (_typeNameTable == null)
            {
                InitTypeTables();
            }
            for (int i=0; i<_typeNameTable.Length; i++)
            {
                if(0 == string.CompareOrdinal(_typeNameTable[i], typeName))
                {
                    return i;
                }
            }
            return -1;
        }

        private int LookupTypeIndexByType(global::System.Type type)
        {
            if (_typeTable == null)
            {
                InitTypeTables();
            }
            for(int i=0; i<_typeTable.Length; i++)
            {
                if(type == _typeTable[i])
                {
                    return i;
                }
            }
            return -1;
        }

        private object Activate_0_SfPdfViewerControl() { return new global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl(); }
        private object Activate_3_PrinterSettings() { return new global::Syncfusion.Windows.PdfViewer.PrinterSettings(); }
        private object Activate_5_TextSearchSettings() { return new global::Syncfusion.Windows.PdfViewer.TextSearchSettings(); }
        private object Activate_6_TextSelectionSettings() { return new global::Syncfusion.Windows.PdfViewer.TextSelectionSettings(); }
        private object Activate_8_Dictionary() { return new global::System.Collections.Generic.Dictionary<global::System.Int32, global::System.Double>(); }
        private object Activate_30_MainPage() { return new global::PDFUsingSyncFusion.MainPage(); }
        private void MapAdd_8_Dictionary(object instance, object key, object item)
        {
            var collection = (global::System.Collections.Generic.IDictionary<global::System.Int32, global::System.Double>)instance;
            var newKey = (global::System.Int32)key;
            var newItem = (global::System.Double)item;
            collection.Add(newKey, newItem);
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CreateXamlType(int typeIndex)
        {
            global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlSystemBaseType xamlType = null;
            global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlUserType userType;
            string typeName = _typeNameTable[typeIndex];
            global::System.Type type = _typeTable[typeIndex];

            switch (typeIndex)
            {

            case 0:   //  Syncfusion.Windows.PdfViewer.SfPdfViewerControl
                userType = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_0_SfPdfViewerControl;
                userType.AddMemberName("IsThumbnailViewEnabled");
                userType.AddMemberName("PrinterSettings");
                userType.AddMemberName("TextSearchSettings");
                userType.AddMemberName("TextSelectionSettings");
                userType.AddMemberName("VerticalOffset");
                userType.AddMemberName("IsTextSearchEnabled");
                userType.AddMemberName("HorizontalOffset");
                userType.AddMemberName("PageOffsetCollection");
                userType.AddMemberName("PageGap");
                userType.AddMemberName("IsTextSelectionEnabled");
                userType.AddMemberName("PageNumber");
                userType.AddMemberName("PageCount");
                userType.AddMemberName("PdfProgressRing");
                userType.AddMemberName("PageView");
                userType.AddMemberName("ViewMode");
                userType.AddMemberName("PageNumberViewMode");
                userType.AddMemberName("Zoom");
                userType.AddMemberName("ShowPageNumber");
                userType.AddMemberName("Visibility");
                userType.AddMemberName("VerticalScrollBarVisibility");
                userType.AddMemberName("HorizontalScrollBarVisibility");
                userType.AddMemberName("ItemsSource");
                userType.AddMemberName("FirstPageCommand");
                userType.AddMemberName("FirstPageCommandParameter");
                userType.AddMemberName("LastPageCommand");
                userType.AddMemberName("LastPageCommandParameter");
                userType.AddMemberName("NextPageCommand");
                userType.AddMemberName("NextPageCommandParameter");
                userType.AddMemberName("PreviousPageCommand");
                userType.AddMemberName("PreviousPageCommandParameter");
                userType.AddMemberName("IncreaseZoomCommand");
                userType.AddMemberName("IncreaseZoomCommandParameter");
                userType.AddMemberName("DecreaseZoomCommand");
                userType.AddMemberName("DecreaseZoomCommandParameter");
                userType.AddMemberName("GoToPageCommand");
                userType.AddMemberName("GoToPageCommandParameter");
                userType.AddMemberName("VisibilityCommand");
                userType.AddMemberName("VisibilityParameter");
                userType.AddMemberName("ViewModeCommand");
                userType.AddMemberName("ViewModeCommandParameter");
                userType.AddMemberName("SwitchToThumbnailModeCommand");
                userType.AddMemberName("SwitchToThumbnailModeCommandParameter");
                userType.AddMemberName("SearchNextCommand");
                userType.AddMemberName("SearchNextCommandParameter");
                userType.AddMemberName("SearchPreviousCommand");
                userType.AddMemberName("SearchPreviousCommandParameter");
                userType.AddMemberName("SinglePageViewCommand");
                userType.AddMemberName("ClearTextSelectionCommand");
                userType.AddMemberName("ClearTextSelectionCommandParameter");
                userType.AddMemberName("PrintCommand");
                userType.AddMemberName("InkAnnotationCommand");
                userType.AddMemberName("LineAnnotationCommand");
                userType.AddMemberName("RectangleAnnotationCommand");
                userType.AddMemberName("EllipseAnnotationCommand");
                userType.AddMemberName("UndoCommand");
                userType.AddMemberName("HighlightAnnotationCommand");
                userType.AddMemberName("UnderlineAnnotationCommand");
                userType.AddMemberName("StrikeoutAnnotationCommand");
                userType.AddMemberName("InkAnnotationSettings");
                userType.AddMemberName("HighlightAnnotationSettings");
                userType.AddMemberName("UnderlineAnnotationSettings");
                userType.AddMemberName("StrikethroughAnnotationSettings");
                userType.AddMemberName("LineAnnotationSettings");
                userType.AddMemberName("RectangleAnnotationSettings");
                userType.AddMemberName("EllipseAnnotationSettings");
                userType.AddMemberName("IsDocumentEdited");
                userType.AddMemberName("RedoCommand");
                userType.AddMemberName("PrintCommandParameter");
                xamlType = userType;
                break;

            case 1:   //  Windows.UI.Xaml.Controls.Control
                xamlType = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 2:   //  Boolean
                xamlType = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 3:   //  Syncfusion.Windows.PdfViewer.PrinterSettings
                userType = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 4:   //  Object
                xamlType = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 5:   //  Syncfusion.Windows.PdfViewer.TextSearchSettings
                userType = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 6:   //  Syncfusion.Windows.PdfViewer.TextSelectionSettings
                userType = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 7:   //  Single
                xamlType = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 8:   //  System.Collections.Generic.Dictionary`2<Int32, Double>
                userType = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.DictionaryAdd = MapAdd_8_Dictionary;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 9:   //  Double
                xamlType = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 10:   //  Int32
                xamlType = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 11:   //  Windows.UI.Xaml.Controls.ProgressRing
                xamlType = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 12:   //  Syncfusion.Windows.PdfViewer.PdfViewerPageView
                userType = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("ContinuousPageView", global::Syncfusion.Windows.PdfViewer.PdfViewerPageView.ContinuousPageView);
                userType.AddEnumValue("SinglePageView", global::Syncfusion.Windows.PdfViewer.PdfViewerPageView.SinglePageView);
                userType.AddEnumValue("ThumbnailView", global::Syncfusion.Windows.PdfViewer.PdfViewerPageView.ThumbnailView);
                xamlType = userType;
                break;

            case 13:   //  System.Enum
                userType = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                xamlType = userType;
                break;

            case 14:   //  System.ValueType
                userType = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 15:   //  Syncfusion.Windows.PdfViewer.PageViewMode
                userType = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Normal", global::Syncfusion.Windows.PdfViewer.PageViewMode.Normal);
                userType.AddEnumValue("OnePage", global::Syncfusion.Windows.PdfViewer.PageViewMode.OnePage);
                userType.AddEnumValue("FitWidth", global::Syncfusion.Windows.PdfViewer.PageViewMode.FitWidth);
                xamlType = userType;
                break;

            case 16:   //  Syncfusion.Windows.PdfViewer.PageNumberViewMode
                userType = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("ShowAlways", global::Syncfusion.Windows.PdfViewer.PageNumberViewMode.ShowAlways);
                userType.AddEnumValue("Hide", global::Syncfusion.Windows.PdfViewer.PageNumberViewMode.Hide);
                xamlType = userType;
                break;

            case 17:   //  Windows.UI.Xaml.Visibility
                xamlType = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 18:   //  Windows.UI.Xaml.Controls.ScrollBarVisibility
                xamlType = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 19:   //  System.Windows.Input.ICommand
                userType = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 20:   //  Syncfusion.Windows.PdfViewer.UndoCommand
                userType = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 21:   //  Syncfusion.Windows.PdfViewer.PdfViewerInkAnnotationSettings
                userType = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.Windows.PdfViewer.PdfViewerAnnotationSettings"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 22:   //  Syncfusion.Windows.PdfViewer.PdfViewerAnnotationSettings
                userType = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 23:   //  Syncfusion.Windows.PdfViewer.PdfViewerHighlightAnnotationSettings
                userType = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.Windows.PdfViewer.PdfViewerAnnotationSettings"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 24:   //  Syncfusion.Windows.PdfViewer.PdfViewerUnderlineAnnotationSettings
                userType = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.Windows.PdfViewer.PdfViewerAnnotationSettings"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 25:   //  Syncfusion.Windows.PdfViewer.PdfViewerStrikethroughAnnotationSettings
                userType = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.Windows.PdfViewer.PdfViewerAnnotationSettings"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 26:   //  Syncfusion.Windows.PdfViewer.PdfViewerLineAnnotationSettings
                userType = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.Windows.PdfViewer.PdfViewerAnnotationSettings"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 27:   //  Syncfusion.Windows.PdfViewer.PdfViewerRectangleAnnotationSettings
                userType = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.Windows.PdfViewer.PdfViewerAnnotationSettings"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 28:   //  Syncfusion.Windows.PdfViewer.PdfViewerEllipseAnnotationSettings
                userType = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.Windows.PdfViewer.PdfViewerAnnotationSettings"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 29:   //  Syncfusion.Windows.PdfViewer.RedoCommand
                userType = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 30:   //  PDFUsingSyncFusion.MainPage
                userType = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_30_MainPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 31:   //  Windows.UI.Xaml.Controls.Page
                xamlType = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 32:   //  Windows.UI.Xaml.Controls.UserControl
                xamlType = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;
            }
            return xamlType;
        }

        private global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider> _otherProviders;
        private global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider> OtherProviders
        {
            get
            {
                if(_otherProviders == null)
                {
                    var otherProviders = new global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider>();
                    global::Windows.UI.Xaml.Markup.IXamlMetadataProvider provider;
                    provider = new global::Syncfusion.UI.Xaml.Controls.Layout.Syncfusion_SfAccordion_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.SfBarcode.UWP.Syncfusion_SfBarcode_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.BulletGraph.Syncfusion_SfBulletGraph_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Notification.Syncfusion_SfBusyIndicator_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Layout.Syncfusion_SfCarousel_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.CellGrid.Syncfusion_SfCellGrid_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.SfChart.UWP.Syncfusion_SfChart_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Media.Syncfusion_SfColorPickers_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.SfDiagram.UWP.Syncfusion_SfDiagram_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Layout.Syncfusion_SfDockingManager_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Gauges.Syncfusion_SfGauge_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Grid.Syncfusion_SfGrid_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Grid.Syncfusion_SfGridCommon_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Navigation.Syncfusion_SfGroupBar_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.HeatMap.Syncfusion_SfHeatMap_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Notification.Syncfusion_SfHubTile_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Input.Syncfusion_SfInput_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.SfKanban.UWP.Syncfusion_SfKanban_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Maps.Syncfusion_SfMaps_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Navigation.Syncfusion_SfMenu_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.NavigationDrawer.Syncfusion_SfNavigationDrawer_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.PdfViewer.Syncfusion_SfPdfViewer_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.PivotChart.Syncfusion_SfPivotChart_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.PivotClient.Syncfusion_SfPivotClient_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.PivotGauge.Syncfusion_SfPivotGauge_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.PivotGrid.Syncfusion_SfPivotGrid_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.PivotShared.Syncfusion_SfPivotShared_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Notification.Syncfusion_SfProgressBar_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.PullToRefresh.Syncfusion_SfPullToRefresh_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Navigation.Syncfusion_SfRadialMenu_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Reports.Syncfusion_SfReportViewer_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.SfRibbon.Syncfusion_SfRibbon_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.RichTextBoxAdv.Syncfusion_SfRichTextBoxAdv_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Rotator.Syncfusion_SfRotator_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Schedule.Syncfusion_SfSchedule_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Syncfusion_SfShared_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Syncfusion_SfSpellChecker_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Spreadsheet.Syncfusion_SfSpreadsheet_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.SunburstChart.Syncfusion_SfSunburstChart_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Navigation.Syncfusion_SfTabControl_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Layout.Syncfusion_SfTileView_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.TreeMap.Syncfusion_SfTreeMap_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Navigation.Syncfusion_SfTreeNavigator_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Input.Syncfusion_SfInput_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    _otherProviders = otherProviders;
                }
                return _otherProviders;
            }
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForName(string typeName)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType = null;
            global::Windows.UI.Xaml.Markup.IXamlType foundXamlType = null;
            foreach(global::Windows.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(typeName);
                if(xamlType != null)
                {
                    if(xamlType.IsConstructible)    // not Constructible means it might be a Return Type Stub
                    {
                        return xamlType;
                    }
                    foundXamlType = xamlType;
                }
            }
            return foundXamlType;
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForType(global::System.Type type)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType = null;
            global::Windows.UI.Xaml.Markup.IXamlType foundXamlType = null;
            foreach(global::Windows.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(type);
                if(xamlType != null)
                {
                    if(xamlType.IsConstructible)    // not Constructible means it might be a Return Type Stub
                    {
                        return xamlType;
                    }
                    foundXamlType = xamlType;
                }
            }
            return foundXamlType;
        }

        private object get_0_SfPdfViewerControl_IsThumbnailViewEnabled(object instance)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            return that.IsThumbnailViewEnabled;
        }
        private void set_0_SfPdfViewerControl_IsThumbnailViewEnabled(object instance, object Value)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            that.IsThumbnailViewEnabled = (global::System.Boolean)Value;
        }
        private object get_1_SfPdfViewerControl_PrinterSettings(object instance)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            return that.PrinterSettings;
        }
        private void set_1_SfPdfViewerControl_PrinterSettings(object instance, object Value)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            that.PrinterSettings = (global::Syncfusion.Windows.PdfViewer.PrinterSettings)Value;
        }
        private object get_2_SfPdfViewerControl_TextSearchSettings(object instance)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            return that.TextSearchSettings;
        }
        private void set_2_SfPdfViewerControl_TextSearchSettings(object instance, object Value)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            that.TextSearchSettings = (global::Syncfusion.Windows.PdfViewer.TextSearchSettings)Value;
        }
        private object get_3_SfPdfViewerControl_TextSelectionSettings(object instance)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            return that.TextSelectionSettings;
        }
        private void set_3_SfPdfViewerControl_TextSelectionSettings(object instance, object Value)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            that.TextSelectionSettings = (global::Syncfusion.Windows.PdfViewer.TextSelectionSettings)Value;
        }
        private object get_4_SfPdfViewerControl_VerticalOffset(object instance)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            return that.VerticalOffset;
        }
        private object get_5_SfPdfViewerControl_IsTextSearchEnabled(object instance)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            return that.IsTextSearchEnabled;
        }
        private void set_5_SfPdfViewerControl_IsTextSearchEnabled(object instance, object Value)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            that.IsTextSearchEnabled = (global::System.Boolean)Value;
        }
        private object get_6_SfPdfViewerControl_HorizontalOffset(object instance)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            return that.HorizontalOffset;
        }
        private object get_7_SfPdfViewerControl_PageOffsetCollection(object instance)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            return that.PageOffsetCollection;
        }
        private object get_8_SfPdfViewerControl_PageGap(object instance)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            return that.PageGap;
        }
        private object get_9_SfPdfViewerControl_IsTextSelectionEnabled(object instance)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            return that.IsTextSelectionEnabled;
        }
        private void set_9_SfPdfViewerControl_IsTextSelectionEnabled(object instance, object Value)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            that.IsTextSelectionEnabled = (global::System.Boolean)Value;
        }
        private object get_10_SfPdfViewerControl_PageNumber(object instance)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            return that.PageNumber;
        }
        private void set_10_SfPdfViewerControl_PageNumber(object instance, object Value)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            that.PageNumber = (global::System.Int32)Value;
        }
        private object get_11_SfPdfViewerControl_PageCount(object instance)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            return that.PageCount;
        }
        private object get_12_SfPdfViewerControl_PdfProgressRing(object instance)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            return that.PdfProgressRing;
        }
        private void set_12_SfPdfViewerControl_PdfProgressRing(object instance, object Value)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            that.PdfProgressRing = (global::Windows.UI.Xaml.Controls.ProgressRing)Value;
        }
        private object get_13_SfPdfViewerControl_PageView(object instance)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            return that.PageView;
        }
        private void set_13_SfPdfViewerControl_PageView(object instance, object Value)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            that.PageView = (global::Syncfusion.Windows.PdfViewer.PdfViewerPageView)Value;
        }
        private object get_14_SfPdfViewerControl_ViewMode(object instance)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            return that.ViewMode;
        }
        private void set_14_SfPdfViewerControl_ViewMode(object instance, object Value)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            that.ViewMode = (global::Syncfusion.Windows.PdfViewer.PageViewMode)Value;
        }
        private object get_15_SfPdfViewerControl_PageNumberViewMode(object instance)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            return that.PageNumberViewMode;
        }
        private void set_15_SfPdfViewerControl_PageNumberViewMode(object instance, object Value)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            that.PageNumberViewMode = (global::Syncfusion.Windows.PdfViewer.PageNumberViewMode)Value;
        }
        private object get_16_SfPdfViewerControl_Zoom(object instance)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            return that.Zoom;
        }
        private object get_17_SfPdfViewerControl_ShowPageNumber(object instance)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            return that.ShowPageNumber;
        }
        private void set_17_SfPdfViewerControl_ShowPageNumber(object instance, object Value)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            that.ShowPageNumber = (global::System.Boolean)Value;
        }
        private object get_18_SfPdfViewerControl_Visibility(object instance)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            return that.Visibility;
        }
        private void set_18_SfPdfViewerControl_Visibility(object instance, object Value)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            that.Visibility = (global::Windows.UI.Xaml.Visibility)Value;
        }
        private object get_19_SfPdfViewerControl_VerticalScrollBarVisibility(object instance)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            return that.VerticalScrollBarVisibility;
        }
        private void set_19_SfPdfViewerControl_VerticalScrollBarVisibility(object instance, object Value)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            that.VerticalScrollBarVisibility = (global::Windows.UI.Xaml.Controls.ScrollBarVisibility)Value;
        }
        private object get_20_SfPdfViewerControl_HorizontalScrollBarVisibility(object instance)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            return that.HorizontalScrollBarVisibility;
        }
        private void set_20_SfPdfViewerControl_HorizontalScrollBarVisibility(object instance, object Value)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            that.HorizontalScrollBarVisibility = (global::Windows.UI.Xaml.Controls.ScrollBarVisibility)Value;
        }
        private object get_21_SfPdfViewerControl_ItemsSource(object instance)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            return that.ItemsSource;
        }
        private void set_21_SfPdfViewerControl_ItemsSource(object instance, object Value)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            that.ItemsSource = (global::System.Object)Value;
        }
        private object get_22_SfPdfViewerControl_FirstPageCommand(object instance)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            return that.FirstPageCommand;
        }
        private void set_22_SfPdfViewerControl_FirstPageCommand(object instance, object Value)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            that.FirstPageCommand = (global::System.Windows.Input.ICommand)Value;
        }
        private object get_23_SfPdfViewerControl_FirstPageCommandParameter(object instance)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            return that.FirstPageCommandParameter;
        }
        private void set_23_SfPdfViewerControl_FirstPageCommandParameter(object instance, object Value)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            that.FirstPageCommandParameter = (global::System.Object)Value;
        }
        private object get_24_SfPdfViewerControl_LastPageCommand(object instance)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            return that.LastPageCommand;
        }
        private void set_24_SfPdfViewerControl_LastPageCommand(object instance, object Value)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            that.LastPageCommand = (global::System.Windows.Input.ICommand)Value;
        }
        private object get_25_SfPdfViewerControl_LastPageCommandParameter(object instance)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            return that.LastPageCommandParameter;
        }
        private void set_25_SfPdfViewerControl_LastPageCommandParameter(object instance, object Value)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            that.LastPageCommandParameter = (global::System.Object)Value;
        }
        private object get_26_SfPdfViewerControl_NextPageCommand(object instance)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            return that.NextPageCommand;
        }
        private void set_26_SfPdfViewerControl_NextPageCommand(object instance, object Value)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            that.NextPageCommand = (global::System.Windows.Input.ICommand)Value;
        }
        private object get_27_SfPdfViewerControl_NextPageCommandParameter(object instance)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            return that.NextPageCommandParameter;
        }
        private void set_27_SfPdfViewerControl_NextPageCommandParameter(object instance, object Value)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            that.NextPageCommandParameter = (global::System.Object)Value;
        }
        private object get_28_SfPdfViewerControl_PreviousPageCommand(object instance)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            return that.PreviousPageCommand;
        }
        private void set_28_SfPdfViewerControl_PreviousPageCommand(object instance, object Value)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            that.PreviousPageCommand = (global::System.Windows.Input.ICommand)Value;
        }
        private object get_29_SfPdfViewerControl_PreviousPageCommandParameter(object instance)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            return that.PreviousPageCommandParameter;
        }
        private void set_29_SfPdfViewerControl_PreviousPageCommandParameter(object instance, object Value)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            that.PreviousPageCommandParameter = (global::System.Object)Value;
        }
        private object get_30_SfPdfViewerControl_IncreaseZoomCommand(object instance)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            return that.IncreaseZoomCommand;
        }
        private void set_30_SfPdfViewerControl_IncreaseZoomCommand(object instance, object Value)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            that.IncreaseZoomCommand = (global::System.Windows.Input.ICommand)Value;
        }
        private object get_31_SfPdfViewerControl_IncreaseZoomCommandParameter(object instance)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            return that.IncreaseZoomCommandParameter;
        }
        private void set_31_SfPdfViewerControl_IncreaseZoomCommandParameter(object instance, object Value)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            that.IncreaseZoomCommandParameter = (global::System.Object)Value;
        }
        private object get_32_SfPdfViewerControl_DecreaseZoomCommand(object instance)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            return that.DecreaseZoomCommand;
        }
        private void set_32_SfPdfViewerControl_DecreaseZoomCommand(object instance, object Value)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            that.DecreaseZoomCommand = (global::System.Windows.Input.ICommand)Value;
        }
        private object get_33_SfPdfViewerControl_DecreaseZoomCommandParameter(object instance)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            return that.DecreaseZoomCommandParameter;
        }
        private void set_33_SfPdfViewerControl_DecreaseZoomCommandParameter(object instance, object Value)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            that.DecreaseZoomCommandParameter = (global::System.Object)Value;
        }
        private object get_34_SfPdfViewerControl_GoToPageCommand(object instance)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            return that.GoToPageCommand;
        }
        private void set_34_SfPdfViewerControl_GoToPageCommand(object instance, object Value)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            that.GoToPageCommand = (global::System.Windows.Input.ICommand)Value;
        }
        private object get_35_SfPdfViewerControl_GoToPageCommandParameter(object instance)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            return that.GoToPageCommandParameter;
        }
        private void set_35_SfPdfViewerControl_GoToPageCommandParameter(object instance, object Value)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            that.GoToPageCommandParameter = (global::System.Object)Value;
        }
        private object get_36_SfPdfViewerControl_VisibilityCommand(object instance)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            return that.VisibilityCommand;
        }
        private void set_36_SfPdfViewerControl_VisibilityCommand(object instance, object Value)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            that.VisibilityCommand = (global::Windows.UI.Xaml.Visibility)Value;
        }
        private object get_37_SfPdfViewerControl_VisibilityParameter(object instance)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            return that.VisibilityParameter;
        }
        private void set_37_SfPdfViewerControl_VisibilityParameter(object instance, object Value)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            that.VisibilityParameter = (global::System.Object)Value;
        }
        private object get_38_SfPdfViewerControl_ViewModeCommand(object instance)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            return that.ViewModeCommand;
        }
        private void set_38_SfPdfViewerControl_ViewModeCommand(object instance, object Value)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            that.ViewModeCommand = (global::System.Windows.Input.ICommand)Value;
        }
        private object get_39_SfPdfViewerControl_ViewModeCommandParameter(object instance)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            return that.ViewModeCommandParameter;
        }
        private void set_39_SfPdfViewerControl_ViewModeCommandParameter(object instance, object Value)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            that.ViewModeCommandParameter = (global::System.Object)Value;
        }
        private object get_40_SfPdfViewerControl_SwitchToThumbnailModeCommand(object instance)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            return that.SwitchToThumbnailModeCommand;
        }
        private void set_40_SfPdfViewerControl_SwitchToThumbnailModeCommand(object instance, object Value)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            that.SwitchToThumbnailModeCommand = (global::System.Windows.Input.ICommand)Value;
        }
        private object get_41_SfPdfViewerControl_SwitchToThumbnailModeCommandParameter(object instance)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            return that.SwitchToThumbnailModeCommandParameter;
        }
        private void set_41_SfPdfViewerControl_SwitchToThumbnailModeCommandParameter(object instance, object Value)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            that.SwitchToThumbnailModeCommandParameter = (global::System.Object)Value;
        }
        private object get_42_SfPdfViewerControl_SearchNextCommand(object instance)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            return that.SearchNextCommand;
        }
        private void set_42_SfPdfViewerControl_SearchNextCommand(object instance, object Value)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            that.SearchNextCommand = (global::System.Windows.Input.ICommand)Value;
        }
        private object get_43_SfPdfViewerControl_SearchNextCommandParameter(object instance)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            return that.SearchNextCommandParameter;
        }
        private void set_43_SfPdfViewerControl_SearchNextCommandParameter(object instance, object Value)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            that.SearchNextCommandParameter = (global::System.Object)Value;
        }
        private object get_44_SfPdfViewerControl_SearchPreviousCommand(object instance)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            return that.SearchPreviousCommand;
        }
        private void set_44_SfPdfViewerControl_SearchPreviousCommand(object instance, object Value)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            that.SearchPreviousCommand = (global::System.Windows.Input.ICommand)Value;
        }
        private object get_45_SfPdfViewerControl_SearchPreviousCommandParameter(object instance)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            return that.SearchPreviousCommandParameter;
        }
        private void set_45_SfPdfViewerControl_SearchPreviousCommandParameter(object instance, object Value)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            that.SearchPreviousCommandParameter = (global::System.Object)Value;
        }
        private object get_46_SfPdfViewerControl_SinglePageViewCommand(object instance)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            return that.SinglePageViewCommand;
        }
        private void set_46_SfPdfViewerControl_SinglePageViewCommand(object instance, object Value)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            that.SinglePageViewCommand = (global::System.Windows.Input.ICommand)Value;
        }
        private object get_47_SfPdfViewerControl_ClearTextSelectionCommand(object instance)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            return that.ClearTextSelectionCommand;
        }
        private void set_47_SfPdfViewerControl_ClearTextSelectionCommand(object instance, object Value)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            that.ClearTextSelectionCommand = (global::System.Windows.Input.ICommand)Value;
        }
        private object get_48_SfPdfViewerControl_ClearTextSelectionCommandParameter(object instance)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            return that.ClearTextSelectionCommandParameter;
        }
        private void set_48_SfPdfViewerControl_ClearTextSelectionCommandParameter(object instance, object Value)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            that.ClearTextSelectionCommandParameter = (global::System.Object)Value;
        }
        private object get_49_SfPdfViewerControl_PrintCommand(object instance)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            return that.PrintCommand;
        }
        private void set_49_SfPdfViewerControl_PrintCommand(object instance, object Value)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            that.PrintCommand = (global::System.Windows.Input.ICommand)Value;
        }
        private object get_50_SfPdfViewerControl_InkAnnotationCommand(object instance)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            return that.InkAnnotationCommand;
        }
        private void set_50_SfPdfViewerControl_InkAnnotationCommand(object instance, object Value)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            that.InkAnnotationCommand = (global::System.Windows.Input.ICommand)Value;
        }
        private object get_51_SfPdfViewerControl_LineAnnotationCommand(object instance)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            return that.LineAnnotationCommand;
        }
        private void set_51_SfPdfViewerControl_LineAnnotationCommand(object instance, object Value)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            that.LineAnnotationCommand = (global::System.Windows.Input.ICommand)Value;
        }
        private object get_52_SfPdfViewerControl_RectangleAnnotationCommand(object instance)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            return that.RectangleAnnotationCommand;
        }
        private void set_52_SfPdfViewerControl_RectangleAnnotationCommand(object instance, object Value)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            that.RectangleAnnotationCommand = (global::System.Windows.Input.ICommand)Value;
        }
        private object get_53_SfPdfViewerControl_EllipseAnnotationCommand(object instance)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            return that.EllipseAnnotationCommand;
        }
        private void set_53_SfPdfViewerControl_EllipseAnnotationCommand(object instance, object Value)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            that.EllipseAnnotationCommand = (global::System.Windows.Input.ICommand)Value;
        }
        private object get_54_SfPdfViewerControl_UndoCommand(object instance)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            return that.UndoCommand;
        }
        private void set_54_SfPdfViewerControl_UndoCommand(object instance, object Value)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            that.UndoCommand = (global::Syncfusion.Windows.PdfViewer.UndoCommand)Value;
        }
        private object get_55_SfPdfViewerControl_HighlightAnnotationCommand(object instance)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            return that.HighlightAnnotationCommand;
        }
        private void set_55_SfPdfViewerControl_HighlightAnnotationCommand(object instance, object Value)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            that.HighlightAnnotationCommand = (global::System.Windows.Input.ICommand)Value;
        }
        private object get_56_SfPdfViewerControl_UnderlineAnnotationCommand(object instance)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            return that.UnderlineAnnotationCommand;
        }
        private void set_56_SfPdfViewerControl_UnderlineAnnotationCommand(object instance, object Value)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            that.UnderlineAnnotationCommand = (global::System.Windows.Input.ICommand)Value;
        }
        private object get_57_SfPdfViewerControl_StrikeoutAnnotationCommand(object instance)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            return that.StrikeoutAnnotationCommand;
        }
        private void set_57_SfPdfViewerControl_StrikeoutAnnotationCommand(object instance, object Value)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            that.StrikeoutAnnotationCommand = (global::System.Windows.Input.ICommand)Value;
        }
        private object get_58_SfPdfViewerControl_InkAnnotationSettings(object instance)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            return that.InkAnnotationSettings;
        }
        private void set_58_SfPdfViewerControl_InkAnnotationSettings(object instance, object Value)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            that.InkAnnotationSettings = (global::Syncfusion.Windows.PdfViewer.PdfViewerInkAnnotationSettings)Value;
        }
        private object get_59_SfPdfViewerControl_HighlightAnnotationSettings(object instance)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            return that.HighlightAnnotationSettings;
        }
        private void set_59_SfPdfViewerControl_HighlightAnnotationSettings(object instance, object Value)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            that.HighlightAnnotationSettings = (global::Syncfusion.Windows.PdfViewer.PdfViewerHighlightAnnotationSettings)Value;
        }
        private object get_60_SfPdfViewerControl_UnderlineAnnotationSettings(object instance)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            return that.UnderlineAnnotationSettings;
        }
        private void set_60_SfPdfViewerControl_UnderlineAnnotationSettings(object instance, object Value)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            that.UnderlineAnnotationSettings = (global::Syncfusion.Windows.PdfViewer.PdfViewerUnderlineAnnotationSettings)Value;
        }
        private object get_61_SfPdfViewerControl_StrikethroughAnnotationSettings(object instance)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            return that.StrikethroughAnnotationSettings;
        }
        private void set_61_SfPdfViewerControl_StrikethroughAnnotationSettings(object instance, object Value)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            that.StrikethroughAnnotationSettings = (global::Syncfusion.Windows.PdfViewer.PdfViewerStrikethroughAnnotationSettings)Value;
        }
        private object get_62_SfPdfViewerControl_LineAnnotationSettings(object instance)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            return that.LineAnnotationSettings;
        }
        private void set_62_SfPdfViewerControl_LineAnnotationSettings(object instance, object Value)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            that.LineAnnotationSettings = (global::Syncfusion.Windows.PdfViewer.PdfViewerLineAnnotationSettings)Value;
        }
        private object get_63_SfPdfViewerControl_RectangleAnnotationSettings(object instance)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            return that.RectangleAnnotationSettings;
        }
        private void set_63_SfPdfViewerControl_RectangleAnnotationSettings(object instance, object Value)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            that.RectangleAnnotationSettings = (global::Syncfusion.Windows.PdfViewer.PdfViewerRectangleAnnotationSettings)Value;
        }
        private object get_64_SfPdfViewerControl_EllipseAnnotationSettings(object instance)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            return that.EllipseAnnotationSettings;
        }
        private void set_64_SfPdfViewerControl_EllipseAnnotationSettings(object instance, object Value)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            that.EllipseAnnotationSettings = (global::Syncfusion.Windows.PdfViewer.PdfViewerEllipseAnnotationSettings)Value;
        }
        private object get_65_SfPdfViewerControl_IsDocumentEdited(object instance)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            return that.IsDocumentEdited;
        }
        private object get_66_SfPdfViewerControl_RedoCommand(object instance)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            return that.RedoCommand;
        }
        private void set_66_SfPdfViewerControl_RedoCommand(object instance, object Value)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            that.RedoCommand = (global::Syncfusion.Windows.PdfViewer.RedoCommand)Value;
        }
        private object get_67_SfPdfViewerControl_PrintCommandParameter(object instance)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            return that.PrintCommandParameter;
        }
        private void set_67_SfPdfViewerControl_PrintCommandParameter(object instance, object Value)
        {
            var that = (global::Syncfusion.Windows.PdfViewer.SfPdfViewerControl)instance;
            that.PrintCommandParameter = (global::System.Object)Value;
        }

        private global::Windows.UI.Xaml.Markup.IXamlMember CreateXamlMember(string longMemberName)
        {
            global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlMember xamlMember = null;
            global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlUserType userType;

            switch (longMemberName)
            {
            case "Syncfusion.Windows.PdfViewer.SfPdfViewerControl.IsThumbnailViewEnabled":
                userType = (global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.Windows.PdfViewer.SfPdfViewerControl");
                xamlMember = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlMember(this, "IsThumbnailViewEnabled", "Boolean");
                xamlMember.Getter = get_0_SfPdfViewerControl_IsThumbnailViewEnabled;
                xamlMember.Setter = set_0_SfPdfViewerControl_IsThumbnailViewEnabled;
                break;
            case "Syncfusion.Windows.PdfViewer.SfPdfViewerControl.PrinterSettings":
                userType = (global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.Windows.PdfViewer.SfPdfViewerControl");
                xamlMember = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlMember(this, "PrinterSettings", "Syncfusion.Windows.PdfViewer.PrinterSettings");
                xamlMember.Getter = get_1_SfPdfViewerControl_PrinterSettings;
                xamlMember.Setter = set_1_SfPdfViewerControl_PrinterSettings;
                break;
            case "Syncfusion.Windows.PdfViewer.SfPdfViewerControl.TextSearchSettings":
                userType = (global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.Windows.PdfViewer.SfPdfViewerControl");
                xamlMember = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlMember(this, "TextSearchSettings", "Syncfusion.Windows.PdfViewer.TextSearchSettings");
                xamlMember.Getter = get_2_SfPdfViewerControl_TextSearchSettings;
                xamlMember.Setter = set_2_SfPdfViewerControl_TextSearchSettings;
                break;
            case "Syncfusion.Windows.PdfViewer.SfPdfViewerControl.TextSelectionSettings":
                userType = (global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.Windows.PdfViewer.SfPdfViewerControl");
                xamlMember = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlMember(this, "TextSelectionSettings", "Syncfusion.Windows.PdfViewer.TextSelectionSettings");
                xamlMember.Getter = get_3_SfPdfViewerControl_TextSelectionSettings;
                xamlMember.Setter = set_3_SfPdfViewerControl_TextSelectionSettings;
                break;
            case "Syncfusion.Windows.PdfViewer.SfPdfViewerControl.VerticalOffset":
                userType = (global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.Windows.PdfViewer.SfPdfViewerControl");
                xamlMember = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlMember(this, "VerticalOffset", "Single");
                xamlMember.Getter = get_4_SfPdfViewerControl_VerticalOffset;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.Windows.PdfViewer.SfPdfViewerControl.IsTextSearchEnabled":
                userType = (global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.Windows.PdfViewer.SfPdfViewerControl");
                xamlMember = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlMember(this, "IsTextSearchEnabled", "Boolean");
                xamlMember.Getter = get_5_SfPdfViewerControl_IsTextSearchEnabled;
                xamlMember.Setter = set_5_SfPdfViewerControl_IsTextSearchEnabled;
                break;
            case "Syncfusion.Windows.PdfViewer.SfPdfViewerControl.HorizontalOffset":
                userType = (global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.Windows.PdfViewer.SfPdfViewerControl");
                xamlMember = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlMember(this, "HorizontalOffset", "Single");
                xamlMember.Getter = get_6_SfPdfViewerControl_HorizontalOffset;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.Windows.PdfViewer.SfPdfViewerControl.PageOffsetCollection":
                userType = (global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.Windows.PdfViewer.SfPdfViewerControl");
                xamlMember = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlMember(this, "PageOffsetCollection", "System.Collections.Generic.Dictionary`2<Int32, Double>");
                xamlMember.Getter = get_7_SfPdfViewerControl_PageOffsetCollection;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.Windows.PdfViewer.SfPdfViewerControl.PageGap":
                userType = (global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.Windows.PdfViewer.SfPdfViewerControl");
                xamlMember = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlMember(this, "PageGap", "Int32");
                xamlMember.Getter = get_8_SfPdfViewerControl_PageGap;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.Windows.PdfViewer.SfPdfViewerControl.IsTextSelectionEnabled":
                userType = (global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.Windows.PdfViewer.SfPdfViewerControl");
                xamlMember = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlMember(this, "IsTextSelectionEnabled", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_9_SfPdfViewerControl_IsTextSelectionEnabled;
                xamlMember.Setter = set_9_SfPdfViewerControl_IsTextSelectionEnabled;
                break;
            case "Syncfusion.Windows.PdfViewer.SfPdfViewerControl.PageNumber":
                userType = (global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.Windows.PdfViewer.SfPdfViewerControl");
                xamlMember = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlMember(this, "PageNumber", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_10_SfPdfViewerControl_PageNumber;
                xamlMember.Setter = set_10_SfPdfViewerControl_PageNumber;
                break;
            case "Syncfusion.Windows.PdfViewer.SfPdfViewerControl.PageCount":
                userType = (global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.Windows.PdfViewer.SfPdfViewerControl");
                xamlMember = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlMember(this, "PageCount", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_11_SfPdfViewerControl_PageCount;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.Windows.PdfViewer.SfPdfViewerControl.PdfProgressRing":
                userType = (global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.Windows.PdfViewer.SfPdfViewerControl");
                xamlMember = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlMember(this, "PdfProgressRing", "Windows.UI.Xaml.Controls.ProgressRing");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_12_SfPdfViewerControl_PdfProgressRing;
                xamlMember.Setter = set_12_SfPdfViewerControl_PdfProgressRing;
                break;
            case "Syncfusion.Windows.PdfViewer.SfPdfViewerControl.PageView":
                userType = (global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.Windows.PdfViewer.SfPdfViewerControl");
                xamlMember = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlMember(this, "PageView", "Syncfusion.Windows.PdfViewer.PdfViewerPageView");
                xamlMember.Getter = get_13_SfPdfViewerControl_PageView;
                xamlMember.Setter = set_13_SfPdfViewerControl_PageView;
                break;
            case "Syncfusion.Windows.PdfViewer.SfPdfViewerControl.ViewMode":
                userType = (global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.Windows.PdfViewer.SfPdfViewerControl");
                xamlMember = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlMember(this, "ViewMode", "Syncfusion.Windows.PdfViewer.PageViewMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_14_SfPdfViewerControl_ViewMode;
                xamlMember.Setter = set_14_SfPdfViewerControl_ViewMode;
                break;
            case "Syncfusion.Windows.PdfViewer.SfPdfViewerControl.PageNumberViewMode":
                userType = (global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.Windows.PdfViewer.SfPdfViewerControl");
                xamlMember = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlMember(this, "PageNumberViewMode", "Syncfusion.Windows.PdfViewer.PageNumberViewMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_15_SfPdfViewerControl_PageNumberViewMode;
                xamlMember.Setter = set_15_SfPdfViewerControl_PageNumberViewMode;
                break;
            case "Syncfusion.Windows.PdfViewer.SfPdfViewerControl.Zoom":
                userType = (global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.Windows.PdfViewer.SfPdfViewerControl");
                xamlMember = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlMember(this, "Zoom", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_16_SfPdfViewerControl_Zoom;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.Windows.PdfViewer.SfPdfViewerControl.ShowPageNumber":
                userType = (global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.Windows.PdfViewer.SfPdfViewerControl");
                xamlMember = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlMember(this, "ShowPageNumber", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_17_SfPdfViewerControl_ShowPageNumber;
                xamlMember.Setter = set_17_SfPdfViewerControl_ShowPageNumber;
                break;
            case "Syncfusion.Windows.PdfViewer.SfPdfViewerControl.Visibility":
                userType = (global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.Windows.PdfViewer.SfPdfViewerControl");
                xamlMember = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlMember(this, "Visibility", "Windows.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_18_SfPdfViewerControl_Visibility;
                xamlMember.Setter = set_18_SfPdfViewerControl_Visibility;
                break;
            case "Syncfusion.Windows.PdfViewer.SfPdfViewerControl.VerticalScrollBarVisibility":
                userType = (global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.Windows.PdfViewer.SfPdfViewerControl");
                xamlMember = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlMember(this, "VerticalScrollBarVisibility", "Windows.UI.Xaml.Controls.ScrollBarVisibility");
                xamlMember.Getter = get_19_SfPdfViewerControl_VerticalScrollBarVisibility;
                xamlMember.Setter = set_19_SfPdfViewerControl_VerticalScrollBarVisibility;
                break;
            case "Syncfusion.Windows.PdfViewer.SfPdfViewerControl.HorizontalScrollBarVisibility":
                userType = (global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.Windows.PdfViewer.SfPdfViewerControl");
                xamlMember = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlMember(this, "HorizontalScrollBarVisibility", "Windows.UI.Xaml.Controls.ScrollBarVisibility");
                xamlMember.Getter = get_20_SfPdfViewerControl_HorizontalScrollBarVisibility;
                xamlMember.Setter = set_20_SfPdfViewerControl_HorizontalScrollBarVisibility;
                break;
            case "Syncfusion.Windows.PdfViewer.SfPdfViewerControl.ItemsSource":
                userType = (global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.Windows.PdfViewer.SfPdfViewerControl");
                xamlMember = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlMember(this, "ItemsSource", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_21_SfPdfViewerControl_ItemsSource;
                xamlMember.Setter = set_21_SfPdfViewerControl_ItemsSource;
                break;
            case "Syncfusion.Windows.PdfViewer.SfPdfViewerControl.FirstPageCommand":
                userType = (global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.Windows.PdfViewer.SfPdfViewerControl");
                xamlMember = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlMember(this, "FirstPageCommand", "System.Windows.Input.ICommand");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_22_SfPdfViewerControl_FirstPageCommand;
                xamlMember.Setter = set_22_SfPdfViewerControl_FirstPageCommand;
                break;
            case "Syncfusion.Windows.PdfViewer.SfPdfViewerControl.FirstPageCommandParameter":
                userType = (global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.Windows.PdfViewer.SfPdfViewerControl");
                xamlMember = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlMember(this, "FirstPageCommandParameter", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_23_SfPdfViewerControl_FirstPageCommandParameter;
                xamlMember.Setter = set_23_SfPdfViewerControl_FirstPageCommandParameter;
                break;
            case "Syncfusion.Windows.PdfViewer.SfPdfViewerControl.LastPageCommand":
                userType = (global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.Windows.PdfViewer.SfPdfViewerControl");
                xamlMember = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlMember(this, "LastPageCommand", "System.Windows.Input.ICommand");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_24_SfPdfViewerControl_LastPageCommand;
                xamlMember.Setter = set_24_SfPdfViewerControl_LastPageCommand;
                break;
            case "Syncfusion.Windows.PdfViewer.SfPdfViewerControl.LastPageCommandParameter":
                userType = (global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.Windows.PdfViewer.SfPdfViewerControl");
                xamlMember = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlMember(this, "LastPageCommandParameter", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_25_SfPdfViewerControl_LastPageCommandParameter;
                xamlMember.Setter = set_25_SfPdfViewerControl_LastPageCommandParameter;
                break;
            case "Syncfusion.Windows.PdfViewer.SfPdfViewerControl.NextPageCommand":
                userType = (global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.Windows.PdfViewer.SfPdfViewerControl");
                xamlMember = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlMember(this, "NextPageCommand", "System.Windows.Input.ICommand");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_26_SfPdfViewerControl_NextPageCommand;
                xamlMember.Setter = set_26_SfPdfViewerControl_NextPageCommand;
                break;
            case "Syncfusion.Windows.PdfViewer.SfPdfViewerControl.NextPageCommandParameter":
                userType = (global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.Windows.PdfViewer.SfPdfViewerControl");
                xamlMember = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlMember(this, "NextPageCommandParameter", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_27_SfPdfViewerControl_NextPageCommandParameter;
                xamlMember.Setter = set_27_SfPdfViewerControl_NextPageCommandParameter;
                break;
            case "Syncfusion.Windows.PdfViewer.SfPdfViewerControl.PreviousPageCommand":
                userType = (global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.Windows.PdfViewer.SfPdfViewerControl");
                xamlMember = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlMember(this, "PreviousPageCommand", "System.Windows.Input.ICommand");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_28_SfPdfViewerControl_PreviousPageCommand;
                xamlMember.Setter = set_28_SfPdfViewerControl_PreviousPageCommand;
                break;
            case "Syncfusion.Windows.PdfViewer.SfPdfViewerControl.PreviousPageCommandParameter":
                userType = (global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.Windows.PdfViewer.SfPdfViewerControl");
                xamlMember = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlMember(this, "PreviousPageCommandParameter", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_29_SfPdfViewerControl_PreviousPageCommandParameter;
                xamlMember.Setter = set_29_SfPdfViewerControl_PreviousPageCommandParameter;
                break;
            case "Syncfusion.Windows.PdfViewer.SfPdfViewerControl.IncreaseZoomCommand":
                userType = (global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.Windows.PdfViewer.SfPdfViewerControl");
                xamlMember = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlMember(this, "IncreaseZoomCommand", "System.Windows.Input.ICommand");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_30_SfPdfViewerControl_IncreaseZoomCommand;
                xamlMember.Setter = set_30_SfPdfViewerControl_IncreaseZoomCommand;
                break;
            case "Syncfusion.Windows.PdfViewer.SfPdfViewerControl.IncreaseZoomCommandParameter":
                userType = (global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.Windows.PdfViewer.SfPdfViewerControl");
                xamlMember = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlMember(this, "IncreaseZoomCommandParameter", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_31_SfPdfViewerControl_IncreaseZoomCommandParameter;
                xamlMember.Setter = set_31_SfPdfViewerControl_IncreaseZoomCommandParameter;
                break;
            case "Syncfusion.Windows.PdfViewer.SfPdfViewerControl.DecreaseZoomCommand":
                userType = (global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.Windows.PdfViewer.SfPdfViewerControl");
                xamlMember = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlMember(this, "DecreaseZoomCommand", "System.Windows.Input.ICommand");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_32_SfPdfViewerControl_DecreaseZoomCommand;
                xamlMember.Setter = set_32_SfPdfViewerControl_DecreaseZoomCommand;
                break;
            case "Syncfusion.Windows.PdfViewer.SfPdfViewerControl.DecreaseZoomCommandParameter":
                userType = (global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.Windows.PdfViewer.SfPdfViewerControl");
                xamlMember = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlMember(this, "DecreaseZoomCommandParameter", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_33_SfPdfViewerControl_DecreaseZoomCommandParameter;
                xamlMember.Setter = set_33_SfPdfViewerControl_DecreaseZoomCommandParameter;
                break;
            case "Syncfusion.Windows.PdfViewer.SfPdfViewerControl.GoToPageCommand":
                userType = (global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.Windows.PdfViewer.SfPdfViewerControl");
                xamlMember = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlMember(this, "GoToPageCommand", "System.Windows.Input.ICommand");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_34_SfPdfViewerControl_GoToPageCommand;
                xamlMember.Setter = set_34_SfPdfViewerControl_GoToPageCommand;
                break;
            case "Syncfusion.Windows.PdfViewer.SfPdfViewerControl.GoToPageCommandParameter":
                userType = (global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.Windows.PdfViewer.SfPdfViewerControl");
                xamlMember = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlMember(this, "GoToPageCommandParameter", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_35_SfPdfViewerControl_GoToPageCommandParameter;
                xamlMember.Setter = set_35_SfPdfViewerControl_GoToPageCommandParameter;
                break;
            case "Syncfusion.Windows.PdfViewer.SfPdfViewerControl.VisibilityCommand":
                userType = (global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.Windows.PdfViewer.SfPdfViewerControl");
                xamlMember = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlMember(this, "VisibilityCommand", "Windows.UI.Xaml.Visibility");
                xamlMember.Getter = get_36_SfPdfViewerControl_VisibilityCommand;
                xamlMember.Setter = set_36_SfPdfViewerControl_VisibilityCommand;
                break;
            case "Syncfusion.Windows.PdfViewer.SfPdfViewerControl.VisibilityParameter":
                userType = (global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.Windows.PdfViewer.SfPdfViewerControl");
                xamlMember = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlMember(this, "VisibilityParameter", "Object");
                xamlMember.Getter = get_37_SfPdfViewerControl_VisibilityParameter;
                xamlMember.Setter = set_37_SfPdfViewerControl_VisibilityParameter;
                break;
            case "Syncfusion.Windows.PdfViewer.SfPdfViewerControl.ViewModeCommand":
                userType = (global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.Windows.PdfViewer.SfPdfViewerControl");
                xamlMember = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlMember(this, "ViewModeCommand", "System.Windows.Input.ICommand");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_38_SfPdfViewerControl_ViewModeCommand;
                xamlMember.Setter = set_38_SfPdfViewerControl_ViewModeCommand;
                break;
            case "Syncfusion.Windows.PdfViewer.SfPdfViewerControl.ViewModeCommandParameter":
                userType = (global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.Windows.PdfViewer.SfPdfViewerControl");
                xamlMember = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlMember(this, "ViewModeCommandParameter", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_39_SfPdfViewerControl_ViewModeCommandParameter;
                xamlMember.Setter = set_39_SfPdfViewerControl_ViewModeCommandParameter;
                break;
            case "Syncfusion.Windows.PdfViewer.SfPdfViewerControl.SwitchToThumbnailModeCommand":
                userType = (global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.Windows.PdfViewer.SfPdfViewerControl");
                xamlMember = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlMember(this, "SwitchToThumbnailModeCommand", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_40_SfPdfViewerControl_SwitchToThumbnailModeCommand;
                xamlMember.Setter = set_40_SfPdfViewerControl_SwitchToThumbnailModeCommand;
                break;
            case "Syncfusion.Windows.PdfViewer.SfPdfViewerControl.SwitchToThumbnailModeCommandParameter":
                userType = (global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.Windows.PdfViewer.SfPdfViewerControl");
                xamlMember = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlMember(this, "SwitchToThumbnailModeCommandParameter", "Object");
                xamlMember.Getter = get_41_SfPdfViewerControl_SwitchToThumbnailModeCommandParameter;
                xamlMember.Setter = set_41_SfPdfViewerControl_SwitchToThumbnailModeCommandParameter;
                break;
            case "Syncfusion.Windows.PdfViewer.SfPdfViewerControl.SearchNextCommand":
                userType = (global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.Windows.PdfViewer.SfPdfViewerControl");
                xamlMember = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlMember(this, "SearchNextCommand", "System.Windows.Input.ICommand");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_42_SfPdfViewerControl_SearchNextCommand;
                xamlMember.Setter = set_42_SfPdfViewerControl_SearchNextCommand;
                break;
            case "Syncfusion.Windows.PdfViewer.SfPdfViewerControl.SearchNextCommandParameter":
                userType = (global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.Windows.PdfViewer.SfPdfViewerControl");
                xamlMember = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlMember(this, "SearchNextCommandParameter", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_43_SfPdfViewerControl_SearchNextCommandParameter;
                xamlMember.Setter = set_43_SfPdfViewerControl_SearchNextCommandParameter;
                break;
            case "Syncfusion.Windows.PdfViewer.SfPdfViewerControl.SearchPreviousCommand":
                userType = (global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.Windows.PdfViewer.SfPdfViewerControl");
                xamlMember = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlMember(this, "SearchPreviousCommand", "System.Windows.Input.ICommand");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_44_SfPdfViewerControl_SearchPreviousCommand;
                xamlMember.Setter = set_44_SfPdfViewerControl_SearchPreviousCommand;
                break;
            case "Syncfusion.Windows.PdfViewer.SfPdfViewerControl.SearchPreviousCommandParameter":
                userType = (global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.Windows.PdfViewer.SfPdfViewerControl");
                xamlMember = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlMember(this, "SearchPreviousCommandParameter", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_45_SfPdfViewerControl_SearchPreviousCommandParameter;
                xamlMember.Setter = set_45_SfPdfViewerControl_SearchPreviousCommandParameter;
                break;
            case "Syncfusion.Windows.PdfViewer.SfPdfViewerControl.SinglePageViewCommand":
                userType = (global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.Windows.PdfViewer.SfPdfViewerControl");
                xamlMember = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlMember(this, "SinglePageViewCommand", "System.Windows.Input.ICommand");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_46_SfPdfViewerControl_SinglePageViewCommand;
                xamlMember.Setter = set_46_SfPdfViewerControl_SinglePageViewCommand;
                break;
            case "Syncfusion.Windows.PdfViewer.SfPdfViewerControl.ClearTextSelectionCommand":
                userType = (global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.Windows.PdfViewer.SfPdfViewerControl");
                xamlMember = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlMember(this, "ClearTextSelectionCommand", "System.Windows.Input.ICommand");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_47_SfPdfViewerControl_ClearTextSelectionCommand;
                xamlMember.Setter = set_47_SfPdfViewerControl_ClearTextSelectionCommand;
                break;
            case "Syncfusion.Windows.PdfViewer.SfPdfViewerControl.ClearTextSelectionCommandParameter":
                userType = (global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.Windows.PdfViewer.SfPdfViewerControl");
                xamlMember = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlMember(this, "ClearTextSelectionCommandParameter", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_48_SfPdfViewerControl_ClearTextSelectionCommandParameter;
                xamlMember.Setter = set_48_SfPdfViewerControl_ClearTextSelectionCommandParameter;
                break;
            case "Syncfusion.Windows.PdfViewer.SfPdfViewerControl.PrintCommand":
                userType = (global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.Windows.PdfViewer.SfPdfViewerControl");
                xamlMember = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlMember(this, "PrintCommand", "System.Windows.Input.ICommand");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_49_SfPdfViewerControl_PrintCommand;
                xamlMember.Setter = set_49_SfPdfViewerControl_PrintCommand;
                break;
            case "Syncfusion.Windows.PdfViewer.SfPdfViewerControl.InkAnnotationCommand":
                userType = (global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.Windows.PdfViewer.SfPdfViewerControl");
                xamlMember = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlMember(this, "InkAnnotationCommand", "System.Windows.Input.ICommand");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_50_SfPdfViewerControl_InkAnnotationCommand;
                xamlMember.Setter = set_50_SfPdfViewerControl_InkAnnotationCommand;
                break;
            case "Syncfusion.Windows.PdfViewer.SfPdfViewerControl.LineAnnotationCommand":
                userType = (global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.Windows.PdfViewer.SfPdfViewerControl");
                xamlMember = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlMember(this, "LineAnnotationCommand", "System.Windows.Input.ICommand");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_51_SfPdfViewerControl_LineAnnotationCommand;
                xamlMember.Setter = set_51_SfPdfViewerControl_LineAnnotationCommand;
                break;
            case "Syncfusion.Windows.PdfViewer.SfPdfViewerControl.RectangleAnnotationCommand":
                userType = (global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.Windows.PdfViewer.SfPdfViewerControl");
                xamlMember = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlMember(this, "RectangleAnnotationCommand", "System.Windows.Input.ICommand");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_52_SfPdfViewerControl_RectangleAnnotationCommand;
                xamlMember.Setter = set_52_SfPdfViewerControl_RectangleAnnotationCommand;
                break;
            case "Syncfusion.Windows.PdfViewer.SfPdfViewerControl.EllipseAnnotationCommand":
                userType = (global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.Windows.PdfViewer.SfPdfViewerControl");
                xamlMember = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlMember(this, "EllipseAnnotationCommand", "System.Windows.Input.ICommand");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_53_SfPdfViewerControl_EllipseAnnotationCommand;
                xamlMember.Setter = set_53_SfPdfViewerControl_EllipseAnnotationCommand;
                break;
            case "Syncfusion.Windows.PdfViewer.SfPdfViewerControl.UndoCommand":
                userType = (global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.Windows.PdfViewer.SfPdfViewerControl");
                xamlMember = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlMember(this, "UndoCommand", "Syncfusion.Windows.PdfViewer.UndoCommand");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_54_SfPdfViewerControl_UndoCommand;
                xamlMember.Setter = set_54_SfPdfViewerControl_UndoCommand;
                break;
            case "Syncfusion.Windows.PdfViewer.SfPdfViewerControl.HighlightAnnotationCommand":
                userType = (global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.Windows.PdfViewer.SfPdfViewerControl");
                xamlMember = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlMember(this, "HighlightAnnotationCommand", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_55_SfPdfViewerControl_HighlightAnnotationCommand;
                xamlMember.Setter = set_55_SfPdfViewerControl_HighlightAnnotationCommand;
                break;
            case "Syncfusion.Windows.PdfViewer.SfPdfViewerControl.UnderlineAnnotationCommand":
                userType = (global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.Windows.PdfViewer.SfPdfViewerControl");
                xamlMember = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlMember(this, "UnderlineAnnotationCommand", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_56_SfPdfViewerControl_UnderlineAnnotationCommand;
                xamlMember.Setter = set_56_SfPdfViewerControl_UnderlineAnnotationCommand;
                break;
            case "Syncfusion.Windows.PdfViewer.SfPdfViewerControl.StrikeoutAnnotationCommand":
                userType = (global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.Windows.PdfViewer.SfPdfViewerControl");
                xamlMember = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlMember(this, "StrikeoutAnnotationCommand", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_57_SfPdfViewerControl_StrikeoutAnnotationCommand;
                xamlMember.Setter = set_57_SfPdfViewerControl_StrikeoutAnnotationCommand;
                break;
            case "Syncfusion.Windows.PdfViewer.SfPdfViewerControl.InkAnnotationSettings":
                userType = (global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.Windows.PdfViewer.SfPdfViewerControl");
                xamlMember = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlMember(this, "InkAnnotationSettings", "Syncfusion.Windows.PdfViewer.PdfViewerInkAnnotationSettings");
                xamlMember.Getter = get_58_SfPdfViewerControl_InkAnnotationSettings;
                xamlMember.Setter = set_58_SfPdfViewerControl_InkAnnotationSettings;
                break;
            case "Syncfusion.Windows.PdfViewer.SfPdfViewerControl.HighlightAnnotationSettings":
                userType = (global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.Windows.PdfViewer.SfPdfViewerControl");
                xamlMember = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlMember(this, "HighlightAnnotationSettings", "Syncfusion.Windows.PdfViewer.PdfViewerHighlightAnnotationSettings");
                xamlMember.Getter = get_59_SfPdfViewerControl_HighlightAnnotationSettings;
                xamlMember.Setter = set_59_SfPdfViewerControl_HighlightAnnotationSettings;
                break;
            case "Syncfusion.Windows.PdfViewer.SfPdfViewerControl.UnderlineAnnotationSettings":
                userType = (global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.Windows.PdfViewer.SfPdfViewerControl");
                xamlMember = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlMember(this, "UnderlineAnnotationSettings", "Syncfusion.Windows.PdfViewer.PdfViewerUnderlineAnnotationSettings");
                xamlMember.Getter = get_60_SfPdfViewerControl_UnderlineAnnotationSettings;
                xamlMember.Setter = set_60_SfPdfViewerControl_UnderlineAnnotationSettings;
                break;
            case "Syncfusion.Windows.PdfViewer.SfPdfViewerControl.StrikethroughAnnotationSettings":
                userType = (global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.Windows.PdfViewer.SfPdfViewerControl");
                xamlMember = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlMember(this, "StrikethroughAnnotationSettings", "Syncfusion.Windows.PdfViewer.PdfViewerStrikethroughAnnotationSettings");
                xamlMember.Getter = get_61_SfPdfViewerControl_StrikethroughAnnotationSettings;
                xamlMember.Setter = set_61_SfPdfViewerControl_StrikethroughAnnotationSettings;
                break;
            case "Syncfusion.Windows.PdfViewer.SfPdfViewerControl.LineAnnotationSettings":
                userType = (global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.Windows.PdfViewer.SfPdfViewerControl");
                xamlMember = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlMember(this, "LineAnnotationSettings", "Syncfusion.Windows.PdfViewer.PdfViewerLineAnnotationSettings");
                xamlMember.Getter = get_62_SfPdfViewerControl_LineAnnotationSettings;
                xamlMember.Setter = set_62_SfPdfViewerControl_LineAnnotationSettings;
                break;
            case "Syncfusion.Windows.PdfViewer.SfPdfViewerControl.RectangleAnnotationSettings":
                userType = (global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.Windows.PdfViewer.SfPdfViewerControl");
                xamlMember = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlMember(this, "RectangleAnnotationSettings", "Syncfusion.Windows.PdfViewer.PdfViewerRectangleAnnotationSettings");
                xamlMember.Getter = get_63_SfPdfViewerControl_RectangleAnnotationSettings;
                xamlMember.Setter = set_63_SfPdfViewerControl_RectangleAnnotationSettings;
                break;
            case "Syncfusion.Windows.PdfViewer.SfPdfViewerControl.EllipseAnnotationSettings":
                userType = (global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.Windows.PdfViewer.SfPdfViewerControl");
                xamlMember = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlMember(this, "EllipseAnnotationSettings", "Syncfusion.Windows.PdfViewer.PdfViewerEllipseAnnotationSettings");
                xamlMember.Getter = get_64_SfPdfViewerControl_EllipseAnnotationSettings;
                xamlMember.Setter = set_64_SfPdfViewerControl_EllipseAnnotationSettings;
                break;
            case "Syncfusion.Windows.PdfViewer.SfPdfViewerControl.IsDocumentEdited":
                userType = (global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.Windows.PdfViewer.SfPdfViewerControl");
                xamlMember = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlMember(this, "IsDocumentEdited", "Boolean");
                xamlMember.Getter = get_65_SfPdfViewerControl_IsDocumentEdited;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.Windows.PdfViewer.SfPdfViewerControl.RedoCommand":
                userType = (global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.Windows.PdfViewer.SfPdfViewerControl");
                xamlMember = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlMember(this, "RedoCommand", "Syncfusion.Windows.PdfViewer.RedoCommand");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_66_SfPdfViewerControl_RedoCommand;
                xamlMember.Setter = set_66_SfPdfViewerControl_RedoCommand;
                break;
            case "Syncfusion.Windows.PdfViewer.SfPdfViewerControl.PrintCommandParameter":
                userType = (global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.Windows.PdfViewer.SfPdfViewerControl");
                xamlMember = new global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlMember(this, "PrintCommandParameter", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_67_SfPdfViewerControl_PrintCommandParameter;
                xamlMember.Setter = set_67_SfPdfViewerControl_PrintCommandParameter;
                break;
            }
            return xamlMember;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlSystemBaseType : global::Windows.UI.Xaml.Markup.IXamlType
    {
        string _fullName;
        global::System.Type _underlyingType;

        public XamlSystemBaseType(string fullName, global::System.Type underlyingType)
        {
            _fullName = fullName;
            _underlyingType = underlyingType;
        }

        public string FullName { get { return _fullName; } }

        public global::System.Type UnderlyingType
        {
            get
            {
                return _underlyingType;
            }
        }

        virtual public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name) { throw new global::System.NotImplementedException(); }
        virtual public bool IsArray { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsCollection { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsConstructible { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsDictionary { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsMarkupExtension { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsBindable { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsReturnTypeStub { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsLocalType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType ItemType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType KeyType { get { throw new global::System.NotImplementedException(); } }
        virtual public object ActivateInstance() { throw new global::System.NotImplementedException(); }
        virtual public void AddToMap(object instance, object key, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void AddToVector(object instance, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void RunInitializer()   { throw new global::System.NotImplementedException(); }
        virtual public object CreateFromString(string input)   { throw new global::System.NotImplementedException(); }
    }
    
    internal delegate object Activator();
    internal delegate void AddToCollection(object instance, object item);
    internal delegate void AddToDictionary(object instance, object key, object item);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlUserType : global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlSystemBaseType
    {
        global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlTypeInfoProvider _provider;
        global::Windows.UI.Xaml.Markup.IXamlType _baseType;
        bool _isArray;
        bool _isMarkupExtension;
        bool _isBindable;
        bool _isReturnTypeStub;
        bool _isLocalType;

        string _contentPropertyName;
        string _itemTypeName;
        string _keyTypeName;
        global::System.Collections.Generic.Dictionary<string, string> _memberNames;
        global::System.Collections.Generic.Dictionary<string, object> _enumValues;

        public XamlUserType(global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlTypeInfoProvider provider, string fullName, global::System.Type fullType, global::Windows.UI.Xaml.Markup.IXamlType baseType)
            :base(fullName, fullType)
        {
            _provider = provider;
            _baseType = baseType;
        }

        // --- Interface methods ----

        override public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { return _baseType; } }
        override public bool IsArray { get { return _isArray; } }
        override public bool IsCollection { get { return (CollectionAdd != null); } }
        override public bool IsConstructible { get { return (Activator != null); } }
        override public bool IsDictionary { get { return (DictionaryAdd != null); } }
        override public bool IsMarkupExtension { get { return _isMarkupExtension; } }
        override public bool IsBindable { get { return _isBindable; } }
        override public bool IsReturnTypeStub { get { return _isReturnTypeStub; } }
        override public bool IsLocalType { get { return _isLocalType; } }

        override public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty
        {
            get { return _provider.GetMemberByLongName(_contentPropertyName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType ItemType
        {
            get { return _provider.GetXamlTypeByName(_itemTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType KeyType
        {
            get { return _provider.GetXamlTypeByName(_keyTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name)
        {
            if (_memberNames == null)
            {
                return null;
            }
            string longName;
            if (_memberNames.TryGetValue(name, out longName))
            {
                return _provider.GetMemberByLongName(longName);
            }
            return null;
        }

        override public object ActivateInstance()
        {
            return Activator(); 
        }

        override public void AddToMap(object instance, object key, object item) 
        {
            DictionaryAdd(instance, key, item);
        }

        override public void AddToVector(object instance, object item)
        {
            CollectionAdd(instance, item);
        }

        override public void RunInitializer() 
        {
            System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(UnderlyingType.TypeHandle);
        }

        override public object CreateFromString(string input)
        {
            if (_enumValues != null)
            {
                int value = 0;

                string[] valueParts = input.Split(',');

                foreach (string valuePart in valueParts) 
                {
                    object partValue;
                    int enumFieldValue = 0;
                    try
                    {
                        if (_enumValues.TryGetValue(valuePart.Trim(), out partValue))
                        {
                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                        }
                        else
                        {
                            try
                            {
                                enumFieldValue = global::System.Convert.ToInt32(valuePart.Trim());
                            }
                            catch( global::System.FormatException )
                            {
                                foreach( string key in _enumValues.Keys )
                                {
                                    if( string.Compare(valuePart.Trim(), key, global::System.StringComparison.OrdinalIgnoreCase) == 0 )
                                    {
                                        if( _enumValues.TryGetValue(key.Trim(), out partValue) )
                                        {
                                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                                            break;
                                        }
                                    }
                                }
                            }
                        }
                        value |= enumFieldValue; 
                    }
                    catch( global::System.FormatException )
                    {
                        throw new global::System.ArgumentException(input, FullName);
                    }
                }

                return value; 
            }
            throw new global::System.ArgumentException(input, FullName);
        }

        // --- End of Interface methods

        public Activator Activator { get; set; }
        public AddToCollection CollectionAdd { get; set; }
        public AddToDictionary DictionaryAdd { get; set; }

        public void SetContentPropertyName(string contentPropertyName)
        {
            _contentPropertyName = contentPropertyName;
        }

        public void SetIsArray()
        {
            _isArray = true; 
        }

        public void SetIsMarkupExtension()
        {
            _isMarkupExtension = true;
        }

        public void SetIsBindable()
        {
            _isBindable = true;
        }

        public void SetIsReturnTypeStub()
        {
            _isReturnTypeStub = true;
        }

        public void SetIsLocalType()
        {
            _isLocalType = true;
        }

        public void SetItemTypeName(string itemTypeName)
        {
            _itemTypeName = itemTypeName;
        }

        public void SetKeyTypeName(string keyTypeName)
        {
            _keyTypeName = keyTypeName;
        }

        public void AddMemberName(string shortName)
        {
            if(_memberNames == null)
            {
                _memberNames =  new global::System.Collections.Generic.Dictionary<string,string>();
            }
            _memberNames.Add(shortName, FullName + "." + shortName);
        }

        public void AddEnumValue(string name, object value)
        {
            if (_enumValues == null)
            {
                _enumValues = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            _enumValues.Add(name, value);
        }
    }

    internal delegate object Getter(object instance);
    internal delegate void Setter(object instance, object value);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlMember : global::Windows.UI.Xaml.Markup.IXamlMember
    {
        global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlTypeInfoProvider _provider;
        string _name;
        bool _isAttachable;
        bool _isDependencyProperty;
        bool _isReadOnly;

        string _typeName;
        string _targetTypeName;

        public XamlMember(global::PDFUsingSyncFusion.PDFUsingSyncFusion_XamlTypeInfo.XamlTypeInfoProvider provider, string name, string typeName)
        {
            _name = name;
            _typeName = typeName;
            _provider = provider;
        }

        public string Name { get { return _name; } }

        public global::Windows.UI.Xaml.Markup.IXamlType Type
        {
            get { return _provider.GetXamlTypeByName(_typeName); }
        }

        public void SetTargetTypeName(string targetTypeName)
        {
            _targetTypeName = targetTypeName;
        }
        public global::Windows.UI.Xaml.Markup.IXamlType TargetType
        {
            get { return _provider.GetXamlTypeByName(_targetTypeName); }
        }

        public void SetIsAttachable() { _isAttachable = true; }
        public bool IsAttachable { get { return _isAttachable; } }

        public void SetIsDependencyProperty() { _isDependencyProperty = true; }
        public bool IsDependencyProperty { get { return _isDependencyProperty; } }

        public void SetIsReadOnly() { _isReadOnly = true; }
        public bool IsReadOnly { get { return _isReadOnly; } }

        public Getter Getter { get; set; }
        public object GetValue(object instance)
        {
            if (Getter != null)
                return Getter(instance);
            else
                throw new global::System.InvalidOperationException("GetValue");
        }

        public Setter Setter { get; set; }
        public void SetValue(object instance, object value)
        {
            if (Setter != null)
                Setter(instance, value);
            else
                throw new global::System.InvalidOperationException("SetValue");
        }
    }
}

